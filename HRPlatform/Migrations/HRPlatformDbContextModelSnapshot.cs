// <auto-generated />
using System;
using HRPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRPlatform.Migrations
{
    [DbContext(typeof(HRPlatformDbContext))]
    partial class HRPlatformDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandidateSkills", b =>
                {
                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CandidateSkills");

                    b.HasData(
                        new
                        {
                            CandidateId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            CandidateId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CandidateId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            CandidateId = 2,
                            SkillId = 4
                        },
                        new
                        {
                            CandidateId = 2,
                            SkillId = 5
                        },
                        new
                        {
                            CandidateId = 2,
                            SkillId = 6
                        });
                });

            modelBuilder.Entity("HRPlatform.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "+381601234567",
                            DateOfBirth = new DateTime(1998, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lusalome@example.com",
                            FullName = "Lu Salome"
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "+381641112233",
                            DateOfBirth = new DateTime(1995, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marko@example.com",
                            FullName = "Irvin Jalom"
                        });
                });

            modelBuilder.Entity("HRPlatform.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Unity"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SQL"
                        },
                        new
                        {
                            Id = 4,
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 5,
                            Name = "React"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Node.js"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Java"
                        });
                });

            modelBuilder.Entity("CandidateSkills", b =>
                {
                    b.HasOne("HRPlatform.Models.Candidate", null)
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRPlatform.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
